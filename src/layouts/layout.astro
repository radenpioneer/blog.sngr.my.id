---
import BaseLayout from './base.astro'
import { getEntry } from 'astro:content'
import { getImage } from 'astro:assets'
import { SEO } from 'astro-seo'

import '@fontsource-variable/plus-jakarta-sans'

import Icons from '~/components/icons.astro'
import Header from '~/components/header'
import Footer from '~/components/footer'

interface Props {
  title?: string
  description?: string
}

const site = await getEntry('site', 'site')
const { title, description } = Astro.props

const profile = await getImage({
  src: site.data.image!,
  width: 70,
  height: 70,
})
---

<BaseLayout>
  <!-- Head -->
  <Fragment slot="head">
    <SEO
      title={title
        ? `${title} | ${site.data.title}`
        : `${site.data.title} | ${site.data.description}`}
      description={description || site.data.description}
      openGraph={{
        basic: {
          title: title || site.data.title,
          type: Astro.url.pathname !== '/' ? 'article' : 'website',
          image: `${Astro.url.href}og.png`
        },
        optional: {
          description: description || site.data.description,
          locale: 'id_ID',
          siteName: site.data.title
        },
        image: {
          type: 'image/png',
          width: 1200,
          height: 630,
          alt: title || site.data.title
        }
      }}
      twitter={{
        creator: '@radenpioneer'
      }}
      extend={{
        link: [
          { rel: 'me', href: 'https://github.com/radenpioneer' },
          { rel: 'me', href: 'https://twitter.com/radenpioneer' },
        ],
      }}
    />
    <Icons />
    <slot name="head" />
  </Fragment>

  <!-- Body -->
  <header>
    <Header
      site={site}
      imageSrc={profile.src}
      imageWidth={profile.attributes.width}
      imageHeight={profile.attributes.height}
      client:idle
    />
  </header>
  <main class="container">
    <slot />
  </main>
  <footer>
    <Footer client:visible />
  </footer>
</BaseLayout>

<style lang="scss">
  body > header {
    --block-spacing-vertical: calc(var(--spacing) * 1.5);
  }

  @media (min-width: 576px) {
    body > header {
      --block-spacing-vertical: calc(var(--spacing) * 2.5) !important;
    }
  }
</style>

<style lang="scss" is:global>
  @use '../../node_modules/@picocss/pico/scss/pico.slim.scss';

  :root {
    --font-family: 'Plus Jakarta Sans Variable', system-ui, sans-serif !important;
  }

  body {
    min-height: 100dvh;
  }
</style>
